{"version":3,"sources":["context/notesContext.js","components/TaskInput.jsx","components/TaskList.jsx","components/TaskFilter.jsx","components/Header.jsx","pages/Todo.js","context/Provider.js","App.js","reportWebVitals.js","index.js"],"names":["notesContext","createContext","TaskInput","useContext","addNote","setTypes","types","useState","other","setOther","otherType","setOtherType","task","id","done","type","setTask","handleOtherState","className","placeholder","value","onChange","event","target","Date","now","onClick","name","e","handleOtherType","TaskList","notes","removeNote","saveEditedNote","editNote","setEditNote","handleTaskDoneStatus","filteredTypeTasks","filteredType","editNoteController","note","noteToEdit","find","map","index","TaskFilter","props","typeTaskFilter","Header","Component","Todo","Provider","children","setNotes","setDone","setFilteredTypeTasks","setFilteredType","state","filter","newText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6315046.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst notesContext = createContext();\n\nexport default notesContext;\n","import React, { useContext, useState } from 'react';\nimport notesContext from '../context/notesContext';\nimport '../styles/TaskInput.css';\n\nfunction TaskInput() {\n  const { addNote, setTypes, types } = useContext(notesContext);\n  const [other, setOther] = useState(false);\n  const [otherType, setOtherType] = useState('');\n\n  const [task, setTask] = useState({\n    task: '',\n    id: 0,\n    done: false,\n    type: '',\n  });\n\n  const handleOtherType = (e) => {\n    setOtherType(e.target.value);\n  };\n\n  const handleOtherState = () => {\n    setOther(false)\n  }\n\n  const handleOtherTypeSave = () => {\n    setOther(false);\n    setTask({\n      ...task,\n      type: otherType,\n    });\n    setTypes([...types, otherType]);\n  };\n\n  return (\n    <div className=\"task-input\">\n      <div className=\"task-input-text-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter task\"\n          value={task.task}\n          onChange={ (event) => { setTask({\n            task: event.target.value,\n            id: Date.now(),\n            done: false,\n            type: '',\n          }) } }\n          className=\"task-text-input\"\n        />\n          <button \n            className=\"task-save-button\"\n            onClick={() => { addNote(task); setTask({\n            task: '',\n            id: 0,\n            done: false,\n            type: '',\n          }); } }>Add Task</button>\n      </div>\n      <section id=\"inputs-radio-tasks\">\n        <label className=\"input-label\">work</label>\n        <input type=\"radio\" name=\"type-task\" onChange={() => { setTask({...task, type: \"work\"}); handleOtherState() } } />\n        <label className=\"input-label\">home</label>\n        <input type=\"radio\" name=\"type-task\" onChange={() => { setTask({...task, type: \"home\"}); handleOtherState() }} />\n        <label className=\"input-label\">school</label>\n        <input type=\"radio\" name=\"type-task\" onChange={() => { setTask({...task, type: \"school\"}); handleOtherState() } } />\n        <label className=\"input-label\">other</label>\n        <input type=\"radio\" name=\"type-task\" onChange={() => setOther(true) } />\n        {other && (\n          <div className=\"other-save\">\n            <input id=\"other-text-input\" type=\"text\" placeholder=\"Enter type\" value={otherType} onChange={(e) => handleOtherType(e)} />\n            <button id=\"other-save-button\" onClick={handleOtherTypeSave}>Save</button>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n}\n\nexport default TaskInput;","import React, { useContext } from 'react';\nimport notesContext from '../context/notesContext';\nimport '../styles/TaskList.css';\n\nfunction TaskList () {\n  const { notes, removeNote, saveEditedNote, editNote, setEditNote, handleTaskDoneStatus, filteredTypeTasks, filteredType } = useContext(notesContext);\n\n  const editNoteController = (note) => {\n    const noteToEdit = notes.find(({ id }) => id === note.id);\n    setEditNote(noteToEdit);\n  };\n\n  return (\n    <div>\n      <ul>\n        { filteredType === 'all' ?\n          notes.map((note, index) => (\n            <div key={index} className=\"task-list-container\">              \n              <li className={ note.done ? 'done-task' : 'not-done-task' }>\n                {`${note.task} - ${note.type}`}\n              </li>\n              { editNote.id === note.id && <div className=\"extra-edit-container\"> <input id=\"extra-edit-input\" type=\"text\" value={editNote.task} onChange={(e) => setEditNote({...editNote, task: e.target.value})} /> <button id=\"extra-edit-btn\" onClick={() => saveEditedNote(editNote.id, editNote.task)}>Save</button> </div> }\n              <button className=\"btn-task-list\" id=\"delete-btn\" onClick={() => removeNote(note.id)}>\n                Delete\n              </button>\n              <button className=\"btn-task-list\" id=\"edit-btn\" onClick={() => editNoteController(note)}>\n                Edit\n              </button>\n              <button className=\"btn-task-list\" id={ `${note.done}-btn` } onClick={() => handleTaskDoneStatus(note.id)}>\n                { note.done ? 'Undo' : 'Done' }\n              </button>\n            </div>\n          ))\n          : filteredTypeTasks.map((note, index) => (\n            <div className=\"task-list-container\" key={index}>\n              <li className={ note.done ? 'done-task' : 'not-done-task' }>\n                {`Task: ${note.task} - Type: ${note.type}`}\n              </li>\n              { editNote.id === note.id && <div className=\"extra-edit-container\" > <input id=\"extra-edit-input\" type=\"text\" value={editNote.task} onChange={(e) => setEditNote({...editNote, task: e.target.value})} /> <button  id=\"extra-edit-btn\" onClick={() => saveEditedNote(editNote.id, editNote.task)}>Save</button> </div> }\n              <button className=\"btn-task-list\" id=\"delete-btn\" onClick={() => removeNote(note.id)}>\n                Delete\n              </button>\n              <button className=\"btn-task-list\" id=\"edit-btn\" onClick={() => editNoteController(note)}>\n                Edit\n              </button>\n              <button className=\"btn-task-list\" id={ `${note.done}-btn` } onClick={() => handleTaskDoneStatus(note.id)}>\n                { note.done ? 'Undo' : 'Done' }\n              </button>\n            </div>\n          ))   \n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default TaskList;\n","import React, { useContext } from 'react';\nimport notesContext from '../context/notesContext';\nimport '../styles/TaskFilter.css';\n\nfunction TaskFilter (props) {\n\n  const { typeTaskFilter, types } = useContext(notesContext);\n\n  return (\n    <div className=\"task-filter-container\">\n      <h3>Filter By:</h3>\n      { types && types.map(type => (\n        <label id=\"filter-label\">{type}\n          <input \n            type=\"radio\" \n            name=\"type-task\" \n            value={type} \n            onChange={() => typeTaskFilter(type)}\n            className=\"filter-input\" \n            />        \n        </label>\n      ))}\n    </div>\n  );\n}\n\nexport default TaskFilter;\n","import React, { Component } from 'react'\nimport '../styles/Header.css';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header-container\">\n        <h1 id=\"header-title\">To do List</h1>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport TaskInput from '../components/TaskInput';\nimport TaskList from '../components/TaskList';\nimport TaskFilter from '../components/TaskFilter';\nimport '../styles/Todo.css';\nimport Header from '../components/Header';\n\n//  tests\n\nfunction Todo() {\n  return (\n    <div>\n      <div className=\"task-big-container\">\n        <Header />\n        <TaskInput />\n        <TaskFilter />\n      </div>\n      <TaskList />\n    </div> \n    );\n}\n\nexport default Todo;\n","import notesContext from './notesContext';\nimport React, { useState } from 'react';\n\nfunction Provider ({ children }) {\n\n  const [notes, setNotes] = useState([]);\n  const [editNote, setEditNote] = useState(false);\n  const [done, setDone] = useState(false);\n  const [types, setTypes] = useState([\"all\", \"work\", \"home\", \"school\"]);\n  const [filteredTypeTasks, setFilteredTypeTasks] = useState([]);\n  const [filteredType, setFilteredType] = useState(\"all\");\n\n  const addNote = (note) => {\n    setNotes([...notes, note]);\n  };\n\n  const removeNote = (id) => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n\n  const saveEditedNote = (id, newText) => {\n    setNotes(notes.map(note => note.id === id ? { ...note, task: newText } : note));\n    setEditNote(false);\n  };\n\n  const handleTaskDoneStatus = (id) => {\n    setNotes(notes.map(note => note.id === id ? { ...note, done: !note.done } : note));\n    setDone(!done);\n  };\n\n  const typeTaskFilter = (type) => {\n    setFilteredTypeTasks(notes.filter(note => note.type === type));\n    setFilteredType(type);\n  };\n  \n  const state = {\n    notes,\n    setNotes,\n    addNote,\n    removeNote,\n    saveEditedNote,\n    editNote,\n    setEditNote,\n    handleTaskDoneStatus, \n    setTypes,\n    types,\n    filteredTypeTasks,\n    filteredType,\n    typeTaskFilter,\n  };\n  \n  return (\n    <notesContext.Provider value={ state } >\n      {children}\n    </notesContext.Provider>\n  )\n}\n\nexport default Provider;\n","import './App.css';\nimport React from 'react';\nimport Todo from './pages/Todo';\nimport Provider from './context/Provider';\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Provider>\n        <Todo />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}