{"version":3,"sources":["context/notesContext.js","components/TaskInput.jsx","components/TaskList.jsx","components/TaskFilter.jsx","pages/Todo.js","context/Provider.js","App.js","reportWebVitals.js","index.js"],"names":["notesContext","createContext","TaskInput","useContext","addNote","setTypes","types","useState","other","setOther","otherType","setOtherType","task","id","done","type","setTask","className","placeholder","value","onChange","event","target","Date","now","name","e","handleOtherType","onClick","TaskList","notes","removeNote","saveEditedNote","editNote","setEditNote","handleTaskDoneStatus","filteredTypeTasks","filteredType","editNoteController","note","noteToEdit","find","map","index","TaskFilter","props","typeTaskFilter","Todo","Provider","children","setNotes","setDone","setFilteredTypeTasks","setFilteredType","state","filter","newText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29786eea.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst notesContext = createContext();\n\nexport default notesContext;\n","import React, { useContext, useState } from 'react';\nimport notesContext from '../context/notesContext';\n\nfunction TaskInput() {\n  const { addNote, setTypes, types } = useContext(notesContext);\n  const [other, setOther] = useState(false);\n  const [otherType, setOtherType] = useState('');\n\n  const [task, setTask] = useState({\n    task: '',\n    id: 0,\n    done: false,\n    type: '',\n  });\n\n  const handleOtherType = (e) => {\n    setOtherType(e.target.value);\n  };\n\n  const handleOtherTypeSave = () => {\n    setOther(false);\n    setTask({\n      ...task,\n      type: otherType,\n    });\n    setTypes([...types, otherType]);\n  };\n\n  return (\n    <div className=\"task-input\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter task\"\n        value={task.task}\n        onChange={ (event) => { setTask({\n          task: event.target.value,\n          id: Date.now(),\n          done: false,\n          type: '',\n        }) } }\n      />\n        <label>work</label>\n        <input type=\"radio\" name=\"type-task\" onChange={() => setTask({...task, type: \"work\"}) } />\n        <label>home</label>\n        <input type=\"radio\" name=\"type-task\" onChange={() => setTask({...task, type: \"home\"}) } />\n        <label>school</label>\n        <input type=\"radio\" name=\"type-task\" onChange={() => setTask({...task, type: \"school\"}) } />\n        <label>other</label>\n        <input type=\"radio\" name=\"type-task\" onChange={() => setOther(true) } />\n        {other && (\n          <div>\n            <input type=\"text\" placeholder=\"Enter type\" value={otherType} onChange={(e) => handleOtherType(e)} />\n            <button onClick={handleOtherTypeSave}>Save</button>\n          </div>\n        )}\n      <button onClick={() => { addNote(task); setTask({\n        task: '',\n        id: 0,\n        done: false,\n        type: '',\n      }); } }>Add Task</button>\n    </div>\n  );\n}\n\nexport default TaskInput;","import React, { useContext } from 'react';\nimport notesContext from '../context/notesContext';\nimport '../styles/TaskList.css';\n\nfunction TaskList () {\n  const { notes, removeNote, saveEditedNote, editNote, setEditNote, handleTaskDoneStatus, filteredTypeTasks, filteredType } = useContext(notesContext);\n\n  const editNoteController = (note) => {\n    const noteToEdit = notes.find(({ id }) => id === note.id);\n    setEditNote(noteToEdit);\n  };\n\n  return (\n    <div>\n      <ul>\n        { filteredType === 'all' ?\n          notes.map((note, index) => (\n            <div key={index}>              \n              <li className={ note.done ? 'done-task' : 'not-done-task' }>\n                {`Task: ${note.task} - Type: ${note.type}`}\n              </li>\n              { editNote.id === note.id && <div> <input type=\"text\" value={editNote.task} onChange={(e) => setEditNote({...editNote, task: e.target.value})} /> <button onClick={() => saveEditedNote(editNote.id, editNote.task)}>Save</button> </div> }\n              <button onClick={() => removeNote(note.id)}>\n                Delete\n              </button>\n              <button onClick={() => editNoteController(note)}>\n                Edit\n              </button>\n              <button onClick={() => handleTaskDoneStatus(note.id)}>\n                { note.done ? 'Undo' : 'Done' }\n              </button>\n            </div>\n          ))\n          : filteredTypeTasks.map((note, index) => (\n            <div key={index}>\n              <li className={ note.done ? 'done-task' : 'not-done-task' }>\n                {`Task: ${note.task} - Type: ${note.type}`}\n              </li>\n              { editNote.id === note.id && <div> <input type=\"text\" value={editNote.task} onChange={(e) => setEditNote({...editNote, task: e.target.value})} /> <button onClick={() => saveEditedNote(editNote.id, editNote.task)}>Save</button> </div> }\n              <button onClick={() => removeNote(note.id)}>\n                Delete\n              </button>\n              <button onClick={() => editNoteController(note)}>\n                Edit\n              </button>\n              <button onClick={() => handleTaskDoneStatus(note.id)}>\n                { note.done ? 'Undo' : 'Done' }\n              </button>\n            </div>\n          ))   \n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default TaskList;\n","import React, { useContext } from 'react';\nimport notesContext from '../context/notesContext';\n\nfunction TaskFilter (props) {\n\n  const { typeTaskFilter, types } = useContext(notesContext);\n\n  return (\n    <div className=\"task-filter\">\n      <span>Filter By:</span>\n      { types && types.map(type => (\n        <label>{type}\n        <input type=\"radio\" name=\"type-task\" value={type} onChange={() => typeTaskFilter(type)} />        \n        </label>))}          \n    </div>\n  );\n}\n\nexport default TaskFilter;\n","import React from 'react';\nimport TaskInput from '../components/TaskInput';\nimport TaskList from '../components/TaskList';\nimport TaskFilter from '../components/TaskFilter';\n\n//  tests\n\nfunction Todo() {\n  return (\n    <div>\n      <TaskInput />\n      <TaskFilter />\n      <TaskList />\n\n    </div> \n    );\n}\n\nexport default Todo;\n","import notesContext from './notesContext';\nimport React, { useState } from 'react';\n\nfunction Provider ({ children }) {\n\n  const [notes, setNotes] = useState([]);\n  const [editNote, setEditNote] = useState(false);\n  const [done, setDone] = useState(false);\n  const [types, setTypes] = useState([\"all\", \"work\", \"home\", \"school\"]);\n  const [filteredTypeTasks, setFilteredTypeTasks] = useState([]);\n  const [filteredType, setFilteredType] = useState(\"all\");\n\n  const addNote = (note) => {\n    setNotes([...notes, note]);\n  };\n\n  const removeNote = (id) => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n\n  const saveEditedNote = (id, newText) => {\n    setNotes(notes.map(note => note.id === id ? { ...note, task: newText } : note));\n    setEditNote(false);\n  };\n\n  const handleTaskDoneStatus = (id) => {\n    setNotes(notes.map(note => note.id === id ? { ...note, done: !note.done } : note));\n    setDone(!done);\n  };\n\n  const typeTaskFilter = (type) => {\n    setFilteredTypeTasks(notes.filter(note => note.type === type));\n    setFilteredType(type);\n  };\n  \n  const state = {\n    notes,\n    setNotes,\n    addNote,\n    removeNote,\n    saveEditedNote,\n    editNote,\n    setEditNote,\n    handleTaskDoneStatus, \n    setTypes,\n    types,\n    filteredTypeTasks,\n    filteredType,\n    typeTaskFilter,\n  };\n  \n  return (\n    <notesContext.Provider value={ state } >\n      {children}\n    </notesContext.Provider>\n  )\n}\n\nexport default Provider;\n","import './App.css';\nimport React from 'react';\nimport Todo from './pages/Todo';\nimport Provider from './context/Provider';\n\nfunction App() {\n  return (\n      <Provider>\n        <Todo />\n      </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}